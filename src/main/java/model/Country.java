package model;
// Generated Feb 15, 2024, 12:11:37 PM by Hibernate Tools 5.2.13.Final

import java.io.Serializable;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.NamedQuery;

import com.fasterxml.jackson.annotation.JsonBackReference;
import java.util.List;

/**
 * Country generated by hbm2java s
 */

@Entity
@Table(name = "country", schema = "public")
@NamedQuery(name = "Country.findAll", query = "SELECT c FROM Country c")
public class Country implements Serializable {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "country_id", unique = true, nullable = false)
	private int countryId;

	@Column(name = "country", nullable = false, length = 50)
	private String country;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_update", nullable = false, columnDefinition = "TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP")
	private Date lastUpdate = new Date(); // Tetapkan nilai default

	@JsonBackReference
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "country")
	private Set<City> cities = new HashSet<>();

	public Country() {
	}

	public Country(int countryId, String country) {
		this.countryId = countryId;
		this.country = country;
	}

	public Country(int countryId, String country, Date lastUpdate, Set<City> cities) {
		this.countryId = countryId;
		this.country = country;
		this.lastUpdate = lastUpdate;
		this.cities = cities;
	}

	public int getCountryId() {
		return countryId;
	}

	public void setCountryId(int countryId) {
		this.countryId = countryId;
	}

	public String getCountry() {
		return country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	public Date getLastUpdate() {
		return lastUpdate;
	}

	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;
	}

	public Set<City> getCities() {
		return cities;
	}

	public void setCities(Set<City> cities) {
		this.cities = cities;
	}
}